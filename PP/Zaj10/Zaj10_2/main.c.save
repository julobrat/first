#include <stdio.h>
#include <stdlib.h>

//*******************************************
struct WiadomoscDoWyborcowX{
    char wiadom[100];
    float liczba;
} X = { "Przyblizanie jest dla lamusow, dowod musi byc przeprowadzony dokladnie.\n", 3.14159};

struct WiadomoscDoWyborcowY{
    char wiadom[100];
    float liczba;
} Y = { "Nie lam sie, to nie Twoja wina, ze nie da sie dokladnie okreslic polozenia czastki. Glupi Heisenberg...\n", 3.14};

struct WiadomoscDoWyborcowZ{
    char wiadom[100];
    float liczba;
} Z = { "Ten kod wyglada tragicznie, trzeba go przepisac, bo slabo sie robi...\n", 32};
//*******************************************

enum WiadomosciDoWyborcow {WIADOMOSC_DO_WYBORCOW_X, WIADOMOSC_DO_WYBORCOW_Y, WIADOMOSC_DO_WYBORCOW_Z};

union wiadomosci{
    char *tekst;
    float liczbaa;
} wiadomki = {&Z.wiadom, Z.liczba}; // wpisanie wiadomosci i liczby do unii

struct WiadomoscDoWyborcow{
    enum WiadomosciDoWyborcow typek;
    union wiadomosci wiadomoscii;
} wiadomka = {WIADOMOSC_DO_WYBORCOW_Z, &wiadomki};// ustalenie do kogo ma byc wiadomosc w tym programie
//*******************************************
void przekazWiadomoscWyborcomX()
{
    printf("\n  WIADOMOSC DO WYBORCOW X!\n");
    if(wiadomka.typek == WIADOMOSC_DO_WYBORCOW_X)
    {
        printf("%s", wiadomka.wiadomoscii.tekst);
    }
    else
    {
        printf("wiedzcie, ze uzywanie %f jako 10*pi to herezja", (wiadomka.wiadomoscii).liczbaa);
    }
}

void przekazWiadomoscWyborcomY()
{
    printf("\n  WIADOMOSC DO WYBORCOW Y!\n");
    if(wiadomka.typek == WIADOMOSC_DO_WYBORCOW_Y)
    {
        printf("%s", wiadomka.wiadomoscii.tekst);
    }
    else
    {
        printf("podstawiajcie %f pod 10*pi i  bedzie gitarka", (wiadomka.wiadomoscii).liczbaa);
    }
}

void przekazWiadomoscWyborcomZ()
{
    printf("\n  WIADOMOSC DO WYBORCOW Z!\n");
    if(wiadomka.typek == WIADOMOSC_DO_WYBORCOW_Z)
    {
        printf("%s", wiadomka.wiadomoscii.tekst);
    }
    else
    {
        printf("10*pi zaokraglone to %f", (wiadomka.wiadomoscii).liczbaa);
    }
}

//*******************************************
int main()
{
    przekazWiadomoscWyborcomX();
    przekazWiadomoscWyborcomY();
    przekazWiadomoscWyborcomZ();

    printf("\n\nNasze liczby to %f i %f i %f", X.liczba, wiadomka.wiadomoscii.liczbaa, Z.liczba);
    return 0;
}
/*- Zdefiniowaæ struktury zawieraj¹ce wiadomoœæ dla odbiorców (tablica char o pewnej d³ugoœci, oraz coœ jeszcze np. liczba) WiadomoscDoWyborcowX, ...Y, ...Z
    - Proszê o zdefiniowanie enum WiadomosciDoWyborcow o nastêpuj¹cych wpisach: WIADOMOSC_DO_WYBORCOW_X, WIADOMOSC_DO_WYBORCOW_Y, WIADOMOSC_DO_WYBORCOW_Z
    - nastêpnie proszê utworzyæ strukturê WiadomoscDoWyborcow, która bêdzie mia³a pole enum z typem wiadomoœci i uniê zawieraj¹c¹ wszystkie dostêpne wiadomoœci

    - proszê utworzyæ równie¿ analogiczne funkcje: przekazWiadomoscWyborcomX, ...Y, ...Z, które to funkcje wyœwietl¹ wiadomoœæ dla wyborców,
    ale tylko jeœli jest ona od popierwnej partii, jeœli nie jest funkcja powinna zignorowaæ treœæ i wyœwietliæ stereotypowy tekst na
    temat nadawcy np. "kosmopolici", "volksdeutsche", itp. - oczywiœcie wybór tekstu zale¿y od wybranych partii*/
